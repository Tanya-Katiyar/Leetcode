# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def levelOrder(self, root: Optional[TreeNode]) -> List[List[int]]:
        bfs=[]
        if not root: return bfs
        queue=deque([])
        queue.append(root)
        while len(queue)!=0:
            level=len(queue)
            currlevel=[]
            for i in range(level):
                curr=queue.popleft()
                currlevel.append(curr.val)
                if curr.left is not None:
                    queue.append(curr.left)
                if curr.right is not None:
                    queue.append(curr.right)
            bfs.append(currlevel)
        return bfs
